name: Publish Production

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Which package to publish'
        required: true
        type: choice
        options:
          - 'packages/dlt-iota'
          - 'packages/dlt-iota-stardust'
          - 'apps/move-to-json'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    if: github.ref == 'refs/heads/main'

    env:
      TEST_MNEMONIC: ${{ secrets.TEST_MNEMONIC }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Remove Mono-Repo Node Modules
        run: |
          rm package.json
          rm package-lock.json

      - name: Check package version does not contain -next
        run: |
          cd ${{ github.event.inputs.package }}
          PACKAGE_VERSION=$(cat package.json | jq '.version' | tr -d '"')
          echo Package Version $PACKAGE_VERSION
          if [[ $PACKAGE_VERSION == *"-next"* ]]; then
            echo "Error: package version contains -next"
            exit 1
          fi

      - name: Download IOTA CLI
        run: |
          cd ..
          wget https://github.com/iotaledger/iota/releases/download/v0.9.2-beta/iota-v0.9.2-beta-linux-x86_64.tgz -O iota-cli.tgz
          tar xzf iota-cli.tgz
          chmod +x iota
          sudo mv iota /usr/local/bin/iota
          iota --version

      - name: Download SUI CLI
        run: |
          cd ..
          wget https://github.com/MystenLabs/sui/releases/download/testnet-v1.44.2/sui-testnet-v1.44.2-ubuntu-x86_64.tgz -O sui-cli.tgz
          tar xzf sui-cli.tgz
          chmod +x sui
          sudo mv sui /usr/local/bin/sui
          sui --version

      - name: Run Dist
        run: |
          cd ${{ github.event.inputs.package }}
          npm install
          npm run dist

      - name: Cleanup package properties
        run: |
          cd ${{ github.event.inputs.package }}
          npm pkg delete scripts
          npm pkg delete devDependencies

      - name: Publish
        run: |
          cd ${{ github.event.inputs.package }}
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
